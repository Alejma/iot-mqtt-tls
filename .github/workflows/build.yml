name: Build IoT MQTT TLS

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install PlatformIO
      run: |
        pip install platformio
        platformio platform install espressif32
    
    - name: Build with secrets
      env:
        # Configuración de ubicación
        COUNTRY: ${{ secrets.COUNTRY }}
        STATE: ${{ secrets.STATE }}
        CITY: ${{ secrets.CITY }}
        
        # Configuración del servidor MQTT
        MQTT_SERVER: ${{ secrets.MQTT_SERVER }}
        MQTT_PORT: ${{ secrets.MQTT_PORT }}
        MQTT_USER: ${{ secrets.MQTT_USER }}
        MQTT_PASSWORD: ${{ secrets.MQTT_PASSWORD }}
        
        # Configuración de WiFi
        WIFI_SSID: ${{ secrets.WIFI_SSID }}
        WIFI_PASSWORD: ${{ secrets.WIFI_PASSWORD }}
        
        # Certificado raíz
        ROOT_CA: ${{ secrets.ROOT_CA }}
      run: |
        platformio run -e esp32dev
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware
        path: .pio/build/esp32dev/firmware.bin
    
    - name: Upload to S3 (if secrets available)
      continue-on-error: true
      env:
        S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        # Check if required secrets are available
        if [ -z "$S3_BUCKET_NAME" ] || [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
          echo "⚠️  S3 secrets not configured. Skipping S3 upload."
          echo "To enable S3 upload, configure the following secrets:"
          echo "  - S3_BUCKET_NAME"
          echo "  - AWS_ACCESS_KEY_ID" 
          echo "  - AWS_SECRET_ACCESS_KEY"
          echo "  - AWS_REGION (optional, defaults to us-east-1)"
          exit 0
        fi
        
        # Set default AWS region if not provided
        export AWS_DEFAULT_REGION=${AWS_REGION:-us-east-1}
        
        # Generate firmware name with timestamp
        FIRMWARE_NAME="firmware-$(date +%Y%m%d-%H%M%S).bin"
        
        # Install AWS CLI
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        
        # Upload to S3 using environment variables instead of direct secret expansion
        aws s3 cp .pio/build/esp32dev/firmware.bin "s3://${S3_BUCKET_NAME}/${FIRMWARE_NAME}"
        
        echo "✅ Firmware uploaded to S3: s3://${S3_BUCKET_NAME}/${FIRMWARE_NAME}"